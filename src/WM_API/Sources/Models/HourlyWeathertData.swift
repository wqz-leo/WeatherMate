//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class HourlyWeathertData: WeatherSummary {

    public var weather: [Weather]

    public var main: Main

    public init(weather: [Weather], main: Main, clouds: Clouds? = nil, dt: DateTime? = nil, rain: Rain? = nil, snow: Snow? = nil, wind: Wind? = nil) {
        self.weather = weather
        self.main = main
        super.init(clouds: clouds, dt: dt, rain: rain, snow: snow, wind: wind)
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        weather = try container.decodeArray("weather")
        main = try container.decode("main")
        try super.init(from: decoder)
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(weather, forKey: "weather")
        try container.encode(main, forKey: "main")
        try super.encode(to: encoder)
    }

    override public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? HourlyWeathertData else { return false }
      guard self.weather == object.weather else { return false }
      guard self.main == object.main else { return false }
      return super.isEqual(to: object)
    }
}
