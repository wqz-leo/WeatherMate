//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class WeatherSummary: APIModel {

    public var clouds: Clouds?

    /** Time of data calculation, unix, UTC */
    public var dt: DateTime?

    public var rain: Rain?

    public var snow: Snow?

    public var wind: Wind?

    public init(clouds: Clouds? = nil, dt: DateTime? = nil, rain: Rain? = nil, snow: Snow? = nil, wind: Wind? = nil) {
        self.clouds = clouds
        self.dt = dt
        self.rain = rain
        self.snow = snow
        self.wind = wind
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clouds = try container.decodeIfPresent("clouds")
        dt = try container.decodeIfPresent("dt")
        rain = try container.decodeIfPresent("rain")
        snow = try container.decodeIfPresent("snow")
        wind = try container.decodeIfPresent("wind")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clouds, forKey: "clouds")
        try container.encodeIfPresent(dt, forKey: "dt")
        try container.encodeIfPresent(rain, forKey: "rain")
        try container.encodeIfPresent(snow, forKey: "snow")
        try container.encodeIfPresent(wind, forKey: "wind")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? WeatherSummary else { return false }
      guard self.clouds == object.clouds else { return false }
      guard self.dt == object.dt else { return false }
      guard self.rain == object.rain else { return false }
      guard self.snow == object.snow else { return false }
      guard self.wind == object.wind else { return false }
      return true
    }

    public static func == (lhs: WeatherSummary, rhs: WeatherSummary) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
