//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Sys: APIModel {

    public var country: String?

    public var id: Int?

    public var message: Double?

    public var sunrise: Double?

    public var sunset: Double?

    public var type: Int?

    public init(country: String? = nil, id: Int? = nil, message: Double? = nil, sunrise: Double? = nil, sunset: Double? = nil, type: Int? = nil) {
        self.country = country
        self.id = id
        self.message = message
        self.sunrise = sunrise
        self.sunset = sunset
        self.type = type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        country = try container.decodeIfPresent("country")
        id = try container.decodeIfPresent("id")
        message = try container.decodeIfPresent("message")
        sunrise = try container.decodeIfPresent("sunrise")
        sunset = try container.decodeIfPresent("sunset")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(country, forKey: "country")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(message, forKey: "message")
        try container.encodeIfPresent(sunrise, forKey: "sunrise")
        try container.encodeIfPresent(sunset, forKey: "sunset")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Sys else { return false }
      guard self.country == object.country else { return false }
      guard self.id == object.id else { return false }
      guard self.message == object.message else { return false }
      guard self.sunrise == object.sunrise else { return false }
      guard self.sunset == object.sunset else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: Sys, rhs: Sys) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
